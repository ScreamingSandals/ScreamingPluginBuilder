plugins {
    alias libs.plugins.licenser apply false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-gradle-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'org.cadixdev.licenser'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        compileOnly gradleApi()
        compileOnly libs.jetbrains.annotations

        if (project.name != 'builder') { // Lombok is not required in builder. TODO: delombok slib and run
            compileOnly libs.projectlombok
            annotationProcessor libs.projectlombok
        }
    }

    publishing {
        if (System.getenv("NEXUS_URL_SNAPSHOT") != null && System.getenv("NEXUS_URL_RELEASE") != null) {
            repositories {
                maven {
                    if (((String) project.version).contains("SNAPSHOT")) {
                        it.url = System.getenv("NEXUS_URL_SNAPSHOT")
                    } else {
                        it.url = System.getenv("NEXUS_URL_RELEASE")
                    }
                    it.credentials.username = System.getenv("NEXUS_USERNAME")
                    it.credentials.password = System.getenv("NEXUS_PASSWORD")
                }
            }
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
    }

    compileJava {
        options.compilerArgs << '-Xlint:deprecation'
    }

    license {
        header = rootProject.file("license_header.txt")
        ignoreFailures = true
        properties {
            year = Calendar.getInstance().get(Calendar.YEAR)
        }
    }
}

